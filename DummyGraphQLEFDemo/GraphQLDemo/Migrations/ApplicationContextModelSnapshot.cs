// <auto-generated />
using System;
using GraphQLDemo.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQLDemo.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraphQLDemo.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf641781-881b-4ff8-be75-c4c59bcf2707"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("33a923ee-25da-42fe-923d-245bcaedcbee"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("040b46dd-ed84-4b3d-8467-946f87665f8d"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("339ac81a-2f15-4540-99e9-84f1683ac67a"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("7616555a-c6d5-4357-84a0-f8ef426d290b"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("339ac81a-2f15-4540-99e9-84f1683ac67a"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQLDemo.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33a923ee-25da-42fe-923d-245bcaedcbee"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("339ac81a-2f15-4540-99e9-84f1683ac67a"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQLDemo.Entities.Account", b =>
                {
                    b.HasOne("GraphQLDemo.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
